#############################################################################
# Makefile for building: Firebird
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Jun 27 13:04:26 2014
# Project:  Firebird2.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Firebird2.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -L/usr/X11R6/lib -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		shape.cpp \
		greenhouse.cpp \
		robot.cpp \
		createenvironmentopenglwindow.cpp \
		createenvironment.cpp \
		robotwindow.cpp \
		robotopenglwindow.cpp \
		texture.cpp \
		mainwindow2.cpp \
		mainopenglwindow2.cpp \
		image.cpp \
		loadpng.cpp \
		initialise.cpp \
		communicate.cpp moc_createenvironment.cpp \
		moc_createenvironmentopenglwindow.cpp \
		moc_robotwindow.cpp \
		moc_robotopenglwindow.cpp \
		moc_mainwindow2.cpp \
		moc_mainopenglwindow2.cpp \
		moc_communicate.cpp
OBJECTS       = main.o \
		shape.o \
		greenhouse.o \
		robot.o \
		createenvironmentopenglwindow.o \
		createenvironment.o \
		robotwindow.o \
		robotopenglwindow.o \
		texture.o \
		mainwindow2.o \
		mainopenglwindow2.o \
		image.o \
		loadpng.o \
		initialise.o \
		communicate.o \
		moc_createenvironment.o \
		moc_createenvironmentopenglwindow.o \
		moc_robotwindow.o \
		moc_robotopenglwindow.o \
		moc_mainwindow2.o \
		moc_mainopenglwindow2.o \
		moc_communicate.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Firebird2.pro
QMAKE_TARGET  = Firebird
DESTDIR       = 
TARGET        = Firebird

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_createenvironment.h ui_mainwindow2.h ui_robotwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Firebird2.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtOpenGL.prl \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Firebird2.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtOpenGL.prl:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Firebird2.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Firebird1.0.0 || $(MKDIR) .tmp/Firebird1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Firebird1.0.0/ && $(COPY_FILE) --parents shape.h greenhouse.h robot.h mydatatype.h createenvironment.h createenvironmentopenglwindow.h createenvironmentopenglwindow.cpp.autosave robotwindow.h texture.h robotopenglwindow.h mainwindow2.h mainopenglwindow2.h image.h loadpng.h initialise.h communicate.h .tmp/Firebird1.0.0/ && $(COPY_FILE) --parents main.cpp shape.cpp greenhouse.cpp robot.cpp createenvironmentopenglwindow.cpp createenvironment.cpp robotwindow.cpp robotopenglwindow.cpp texture.cpp mainwindow2.cpp mainopenglwindow2.cpp image.cpp loadpng.cpp initialise.cpp communicate.cpp .tmp/Firebird1.0.0/ && $(COPY_FILE) --parents createenvironment.ui mainwindow2.ui robotwindow.ui .tmp/Firebird1.0.0/ && (cd `dirname .tmp/Firebird1.0.0` && $(TAR) Firebird1.0.0.tar Firebird1.0.0 && $(COMPRESS) Firebird1.0.0.tar) && $(MOVE) `dirname .tmp/Firebird1.0.0`/Firebird1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Firebird1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_createenvironment.cpp moc_createenvironmentopenglwindow.cpp moc_robotwindow.cpp moc_robotopenglwindow.cpp moc_mainwindow2.cpp moc_mainopenglwindow2.cpp moc_communicate.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_createenvironment.cpp moc_createenvironmentopenglwindow.cpp moc_robotwindow.cpp moc_robotopenglwindow.cpp moc_mainwindow2.cpp moc_mainopenglwindow2.cpp moc_communicate.cpp
moc_createenvironment.cpp: shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		createenvironment.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) createenvironment.h -o moc_createenvironment.cpp

moc_createenvironmentopenglwindow.cpp: mydatatype.h \
		createenvironment.h \
		shape.h \
		image.h \
		loadpng.h \
		texture.h \
		createenvironmentopenglwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) createenvironmentopenglwindow.h -o moc_createenvironmentopenglwindow.cpp

moc_robotwindow.cpp: mydatatype.h \
		robotwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) robotwindow.h -o moc_robotwindow.cpp

moc_robotopenglwindow.cpp: shape.h \
		mydatatype.h \
		robot.h \
		texture.h \
		loadpng.h \
		robotopenglwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) robotopenglwindow.h -o moc_robotopenglwindow.cpp

moc_mainwindow2.cpp: createenvironment.h \
		shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		robotwindow.h \
		mainwindow2.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow2.h -o moc_mainwindow2.cpp

moc_mainopenglwindow2.cpp: shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		texture.h \
		robot.h \
		communicate.h \
		mainopenglwindow2.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainopenglwindow2.h -o moc_mainopenglwindow2.cpp

moc_communicate.cpp: communicate.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) communicate.h -o moc_communicate.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_createenvironment.h ui_mainwindow2.h ui_robotwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_createenvironment.h ui_mainwindow2.h ui_robotwindow.h
ui_createenvironment.h: createenvironment.ui \
		createenvironmentopenglwindow.h \
		mydatatype.h \
		createenvironment.h \
		shape.h \
		image.h \
		loadpng.h \
		texture.h
	/usr/bin/uic-qt4 createenvironment.ui -o ui_createenvironment.h

ui_mainwindow2.h: mainwindow2.ui \
		mainopenglwindow2.h \
		shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		texture.h \
		robot.h \
		communicate.h
	/usr/bin/uic-qt4 mainwindow2.ui -o ui_mainwindow2.h

ui_robotwindow.h: robotwindow.ui \
		robotopenglwindow.h \
		shape.h \
		mydatatype.h \
		robot.h \
		texture.h \
		loadpng.h
	/usr/bin/uic-qt4 robotwindow.ui -o ui_robotwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		createenvironment.h \
		shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		robotwindow.h \
		dialog.h \
		test.h \
		mainwindow2.h \
		communicate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

shape.o: shape.cpp shape.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shape.o shape.cpp

greenhouse.o: greenhouse.cpp greenhouse.h \
		shape.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o greenhouse.o greenhouse.cpp

robot.o: robot.cpp robot.h \
		shape.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o robot.o robot.cpp

createenvironmentopenglwindow.o: createenvironmentopenglwindow.cpp createenvironmentopenglwindow.h \
		mydatatype.h \
		createenvironment.h \
		shape.h \
		image.h \
		loadpng.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createenvironmentopenglwindow.o createenvironmentopenglwindow.cpp

createenvironment.o: createenvironment.cpp createenvironment.h \
		shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		ui_createenvironment.h \
		createenvironmentopenglwindow.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createenvironment.o createenvironment.cpp

robotwindow.o: robotwindow.cpp robotwindow.h \
		mydatatype.h \
		ui_robotwindow.h \
		robotopenglwindow.h \
		shape.h \
		robot.h \
		texture.h \
		loadpng.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o robotwindow.o robotwindow.cpp

robotopenglwindow.o: robotopenglwindow.cpp robotopenglwindow.h \
		shape.h \
		mydatatype.h \
		robot.h \
		texture.h \
		loadpng.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o robotopenglwindow.o robotopenglwindow.cpp

texture.o: texture.cpp texture.h \
		loadpng.h \
		mydatatype.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o texture.o texture.cpp

mainwindow2.o: mainwindow2.cpp mainwindow2.h \
		createenvironment.h \
		shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		robotwindow.h \
		ui_mainwindow2.h \
		mainopenglwindow2.h \
		texture.h \
		robot.h \
		communicate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow2.o mainwindow2.cpp

mainopenglwindow2.o: mainopenglwindow2.cpp mainopenglwindow2.h \
		shape.h \
		mydatatype.h \
		image.h \
		loadpng.h \
		texture.h \
		robot.h \
		communicate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainopenglwindow2.o mainopenglwindow2.cpp

image.o: image.cpp image.h \
		loadpng.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o image.o image.cpp

loadpng.o: loadpng.cpp loadpng.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o loadpng.o loadpng.cpp

initialise.o: initialise.cpp initialise.h \
		mydatatype.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o initialise.o initialise.cpp

communicate.o: communicate.cpp communicate.h \
		ui_communicate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o communicate.o communicate.cpp

moc_createenvironment.o: moc_createenvironment.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_createenvironment.o moc_createenvironment.cpp

moc_createenvironmentopenglwindow.o: moc_createenvironmentopenglwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_createenvironmentopenglwindow.o moc_createenvironmentopenglwindow.cpp

moc_robotwindow.o: moc_robotwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_robotwindow.o moc_robotwindow.cpp

moc_robotopenglwindow.o: moc_robotopenglwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_robotopenglwindow.o moc_robotopenglwindow.cpp

moc_mainwindow2.o: moc_mainwindow2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow2.o moc_mainwindow2.cpp

moc_mainopenglwindow2.o: moc_mainopenglwindow2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainopenglwindow2.o moc_mainopenglwindow2.cpp

moc_communicate.o: moc_communicate.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_communicate.o moc_communicate.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

